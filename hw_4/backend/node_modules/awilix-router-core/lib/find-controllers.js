"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.findControllers = findControllers;
const glob = __importStar(require("fast-glob"));
const state_util_1 = require("./state-util");
const node_url_1 = require("node:url");
/**
 * Finds classes using the specified pattern and options.
 *
 * @param pattern Glob pattern
 * @param opts Glob options and ES modules dynamic import module loading
 */
function findControllers(pattern, opts) {
    const result = glob.sync(pattern, opts);
    /* istanbul ignore next: can't cover because we are replacing the importer in tests. */
    const importFn = opts?.import ?? ((path) => import(path));
    if (opts && opts.esModules === true) {
        return Promise.all(result.map((path) => importFn((0, node_url_1.pathToFileURL)(path).toString()).then(extractStateAndTargetFromExports))).then((controllers) => controllers.reduce((acc, cur) => acc.concat(cur), []));
    }
    else {
        return result
            .map((path) => {
            const exports = require(path);
            return extractStateAndTargetFromExports(exports);
        })
            .reduce((acc, cur) => acc.concat(cur), []);
    }
}
function extractStateAndTargetFromExports(exports) {
    const items = [];
    if (exports) {
        const stateAndTarget = (0, state_util_1.getStateAndTarget)(exports);
        if (stateAndTarget) {
            items.push(stateAndTarget);
            return items;
        }
        // loop through exports - this will cover named as well as a default export
        for (const key of Object.keys(exports)) {
            const stateAndTarget = (0, state_util_1.getStateAndTarget)(exports[key]);
            if (stateAndTarget) {
                items.push(stateAndTarget);
            }
        }
    }
    return items;
}
//# sourceMappingURL=find-controllers.js.map