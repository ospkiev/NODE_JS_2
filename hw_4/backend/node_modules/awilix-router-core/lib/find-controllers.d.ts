import * as glob from 'fast-glob';
import { IStateAndTarget } from './state-util';
/**
 * Find Controllers options for module finding and import resolution.
 */
export type FindControllersOptions<ESM extends boolean = false> = glob.Options & {
    /**
     * When `true`, the function will use ESM `import` and return a `Promise`; otherwise
     * uses `require` and is synchronous.
     */
    esModules?: ESM;
    /**
     * The `import` function to use. Defaults to the global `import`.
     * This is only used for testing.
     *
     * @private
     */
    import?: ESM extends true ? (path: string) => Promise<any> : never;
};
/**
 * Find Controllers result.
 */
export type FindControllersResult = Array<IStateAndTarget>;
export declare function findControllers<ESM extends boolean = false>(pattern: string, opts?: FindControllersOptions<ESM>): ESM extends true ? Promise<FindControllersResult> : FindControllersResult;
